<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webapps.mapper.IRecruitmentTagMapper">
	<resultMap id="resultMap" type="com.webapps.common.entity.RecruitmentTag">
		<id column="ID" jdbcType="DECIMAL" property="id" />
		<result column="recruitment_id" jdbcType="INTEGER" property="recruitmentId" />
		<result column="tag_id" jdbcType="INTEGER" property="tagId" />
		<result column="data_state" jdbcType="DECIMAL" property="dataState" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="update_time" jdbcType="VARCHAR" property="updateTime" />
	</resultMap>

	<sql id="select_columns">
		ID,recruitment_id,tag_id, data_state,create_time,update_time
	</sql>

	<sql id="insert_columns">
		recruitment_id,tag_id,data_state,create_time
	</sql>

	<select id="getById" resultMap="resultMap">
		select <include refid="select_columns" /> from t_recruitment_tag where id = #{id} and data_state = 1
	</select>
	
	<!-- 查询所有 -->
	<select id="queryAll" resultMap="resultMap">
		select <include refid="select_columns" /> from t_recruitment_tag where data_state = 1
	</select>

	<select id="queryAllByRecruitmentId" resultMap="resultMap">
		select <include refid="select_columns" /> from t_recruitment_tag where data_state = 1 and recruitment_id = #{recruitmentId}
	</select>

	<!-- 查询行政区总数 -->
	<select id="queryCount" resultType="java.lang.Integer">
		SELECT count(1) FROM t_recruitment_tag
		<trim prefix="WHERE" prefixOverrides="AND">
			data_state = 1 
			<if test="obj.name !=null and obj.name != ''">
				AND name like concat('%',#{obj.name},'%')
			</if>
			<if test="obj.type !=null and obj.type != ''">
				and type = #{obj.type}
			</if>
		</trim>
	</select>

	<!-- 分页查询行政区信息 -->
	<select id="queryPage" resultMap="resultMap">
		<include refid="ORACLE.paginationStart" />
		SELECT
		<include refid="select_columns" />
		FROM t_recruitment_tag
		<trim prefix="WHERE" prefixOverrides="AND">
			data_state = 1
			<if test="obj.name !=null and obj.name != ''">
				AND name like concat('%',#{obj.name},'%')
			</if>
			<if test="obj.type !=null and obj.type != ''">
				and type = #{obj.type}
			</if>
		</trim>
		order by create_time DESC
		<include refid="ORACLE.paginationEnd" />
	</select>

	<!-- 用于初始化数据时使用 -->
	<update id="batchUpdate" >
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update t_recruitment_tag
			<set>
				parent_id=#{item.parentId},
				type = #{item.type}
			</set>
			where id = #{item.id}
         </foreach>
	</update>
	
	<update id="batchDeleteInLogic" >
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update t_recruitment_tag
			<set>
				data_state = 0,
				update_time = #{item.updateTime}
			</set>
			where id = #{item.id}
         </foreach>
	</update>

	<delete id="batchDeleteByIds">
		DELETE FROM t_recruitment_tag WHERE recruitment_id = #{recruitmentId}
		AND tag_id IN
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{obj.tagId,jdbcType=INTEGER}
			)
		</foreach>
	</delete>

	<delete id="batchDeleteByIdNotIn">
		DELETE FROM t_recruitment_tag where recruitment_id = #{recruitmentId}
		AND tag_id NOT IN (
		<foreach collection="list" item="item" index="index" separator=",">
		  	#{item.tagId,jdbcType=INTEGER}
		</foreach>
		)
	</delete>

	<delete id="batchDeleteByRecruimentId">
		DELETE FROM t_recruitment_tag where recruitment_id = #{recruitmentId}
	</delete>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="obj.id">
		insert into t_recruitment_tag 
		(<include refid="insert_columns" />)
		values
		(
			#{obj.recruitmentId,jdbcType=INTEGER},
			#{obj.tagId,jdbcType=INTEGER},
			#{obj.dataState,jdbcType=INTEGER},
			#{obj.createTime,jdbcType=VARCHAR}
		)
	</insert>

	<insert id="batchInsert" parameterType="java.util.List">
		insert into t_recruitment_tag
		(
			<include refid="insert_columns" />
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{item.recruitmentId,jdbcType=INTEGER},
				#{item.tagId,jdbcType=INTEGER},
				#{item.dataState,jdbcType=INTEGER},
				#{item.createTime,jdbcType=VARCHAR}
		  	)
		</foreach>
	</insert>
	
	<update id="updateById" >
		data_state=#{obj.dataState},
		update_time=#{obj.updateTime}
		where id=#{id}
	</update>
	
	<update id="deleteByIdInLogic" >
		update t_recruitment_tag
		set data_state = 0,
		update_time = #{obj.updateTime}
		where id = #{id}
	</update>

	<delete id="delete">
		DELETE from t_recruitment_tag where id=#{id}
	</delete>
</mapper>