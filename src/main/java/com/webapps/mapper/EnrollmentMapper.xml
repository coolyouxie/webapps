<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webapps.mapper.IEnrollmentMapper">
	<resultMap id="resultMap" type="com.webapps.common.entity.Enrollment">
		<id column="ID" jdbcType="DECIMAL" property="id" />
		<result column="user_id" jdbcType="DECIMAL" property="user.id" />
		<result column="user_name" jdbcType="DECIMAL" property="user.name" />
		<result column="user_mobile" jdbcType="DECIMAL" property="user.mobile" />
		<result column="recruitment_id" jdbcType="DECIMAL" property="recruitment.id" />
		<result column="recruitment_title" jdbcType="DECIMAL" property="recruitment.title" />
		<result column="company_id" jdbcType="DECIMAL" property="company.id" />
		<result column="company_name" jdbcType="DECIMAL" property="company.name" />
		<result column="state" jdbcType="DECIMAL" property="state" />
		<result column="is_talked" jdbcType="DECIMAL" property="isTalked" />
		<result column="talk_result" jdbcType="VARCHAR" property="talkResult" />
		<result column="data_state" jdbcType="DECIMAL" property="dataState" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="failed_reason" jdbcType="VARCHAR" property="failedReason" />
		<result column="entry_date" jdbcType="VARCHAR" property="entryDate" />
		<result column="reward" jdbcType="DECIMAL" property="reward" />
		<result column="expire_date" jdbcType="DECIMAL" property="expireDate" />
		<result column="cashback_days" jdbcType="DECIMAL" property="cashbackDays" />
		<result column="is_history" jdbcType="DECIMAL" property="isHistory" />
	</resultMap>

	<sql id="select_columns">
		te.ID,te.user_id,te.recruitment_id,te.company_id,te.state, te.data_state,
		te.CREATE_TIME,te.UPDATE_TIME,te.is_talked,te.talk_result,te.remark,te.failed_reason,
		te.entry_date,te.reward,te.cashback_days,te.is_history
	</sql>

	<sql id="insert_columns">
		user_id,recruitment_id,company_id,state, data_state,CREATE_TIME,is_talked,talk_result,failed_reason,
		entry_date,reward,cashback_days,is_history
	</sql>
	
	<select id="getById" resultMap="resultMap">
		select <include refid="select_columns" /> from t_enrollment te where te.id = #{id}
	</select>
	
	<!-- 查询所有 -->
	<select id="queryAll" resultMap="resultMap">
		select <include refid="select_columns" /> from t_enrollment te where te.data_state = 1
	</select>
	
	<select id="queryByState" resultMap="resultMap">
		select <include refid="select_columns" /> from t_enrollment te where state = #{state}
	</select>
	
	<select id="queryListByFkId" resultMap="resultMap">
		select <include refid="select_columns" />,
		tc.name as company_name,
		tc.id as company_id,
		tr.title as recruitment_title 
		from t_enrollment te 
		left join t_company tc on tc.id=te.company_id
		left join t_recruitment tr on tr.id = te.recruitment_id 
		<trim prefix="WHERE" prefixOverrides="AND">
			te.data_state = 1
			<if test="obj.recruitment != null and obj.recruitment.id != null and obj.recruitment.id != ''">
				and te.recruitment_id = #{obj.recruitment.id}
			</if>
			<if test="obj.company != null and obj.company.id != null and obj.company.id !='' ">
				and te.company_id = #{obj.company.id}
			</if>
			<if test="obj.company != null and obj.company.name !=null and obj.company.name != ''">
				and tc.name like concat('%',#{obj.company.name},'%')
			</if>
			<if test="obj.user != null and obj.user.id != null and obj.user.id != ''">
				and te.user_id = #{obj.user.id}
			</if>
		</trim>
		order by te.id desc
	</select>
	
	<select id="countByFkIds" resultType="java.lang.Integer">
		select count(1) from t_enrollment te 
		<trim prefix="WHERE" prefixOverrides="AND">
			te.data_state = 1 and state = 1
			<if test="obj.recruitment != null and obj.recruitment.id != null">
				and te.recruitment_id = #{obj.recruitment.id}
			</if>
			<if test="obj.company != null and obj.company.id != null">
				and te.company_id = #{obj.company.id}
			</if>
			<if test="obj.user != null and obj.user.id != null">
				and te.user_id = #{obj.user.id}
			</if>
		</trim>
	</select>
	
	<select id="queryListByUserIdAndState" resultMap="resultMap">
		select 
		<include refid="select_columns" />
		from t_enrollment te where te.user_id = #{userId} and id != #{emId}
	</select>

	<select id="queryListByUserIdAndStateNew" resultMap="resultMap">
		select
		<include refid="select_columns" />
		from t_enrollment te where te.state =#{state} and te.user_id = #{userId}
	</select>


	<select id="queryListByUserIdStateAndId" resultMap="resultMap">
		select
		<include refid="select_columns" />
		from t_enrollment te where te.state = 1 and te.user_id = #{userId} and te.id != #{id} and data_state=1
	</select>

	<select id="getCurrentStateEnrollmentByUserId" resultMap="resultMap">
		select * from t_enrollment where user_id = #{userId} and data_state = 1 order by update_time DESC
	</select>
	
	<select id="queryCount" resultType="java.lang.Integer">
		SELECT count(1) from t_enrollment te 
		left join t_company tc on tc.id=te.company_id
		left join t_recruitment tr on tr.id = te.recruitment_id 
		left join t_user tu on tu.id = te.user_id
		<trim prefix="WHERE" prefixOverrides="AND">
			te.data_state = 1 
			<if test="obj.state != null and obj.state != ''">
				and te.state = #{obj.state}
			</if>
			<if test="obj.isTalked != null and obj.isTalked != '' or obj.isTalked==0">
				and te.is_talked = #{obj.isTalked}
			</if>
			<if test="obj.user != null and obj.user.name != null and obj.user.name != ''">
				and tu.name = #{obj.user.name}
			</if>
			<if test="obj.user != null and obj.user.id != null and obj.user.id != ''">
				and te.user_id = #{obj.user.id}
			</if>
			<if test="obj.user != null and obj.user.mobile !=null and obj.user.mobile != ''">
				and tu.mobile = #{obj.user.mobile}
			</if>
			<if test="obj.company != null and obj.company.name != null and obj.company.name != ''">
				and tc.name like concat('%',#{obj.company.name},'%')
			</if>
			<if test="obj.enrollTimeStart != null and obj.enrollTimeStart != ''">
				and te.create_time >= #{obj.enrollTimeStart}
			</if>
			<if test="obj.enrollTimeEnd != null and obj.enrollTimeEnd != ''">
				and #{obj.enrollTimeEnd} >= te.create_time
			</if>
		</trim>
	</select>

	<!-- 分页查询行政区信息 -->
	<select id="queryPage" resultMap="resultMap">
		<include refid="ORACLE.paginationStart" />
		SELECT
		<include refid="select_columns" />,
		tc.name company_name,
		tr.title recruitment_title,
		tu.name as user_name,
		tu.mobile as user_mobile
		from t_enrollment te 
		left join t_company tc on tc.id=te.company_id
		left join t_recruitment tr on tr.id = te.recruitment_id 
		left join t_user tu on tu.id=te.user_id
		<trim prefix="WHERE" prefixOverrides="AND">
			te.data_state = 1 
			<if test="obj.state != null and obj.state != ''">
				and te.state = #{obj.state}
			</if>
			<if test="obj.isTalked != null and obj.isTalked != '' or obj.isTalked==0">
				and te.is_talked = #{obj.isTalked}
			</if>
			<if test="obj.user != null and obj.user.id != null and obj.user.id != ''">
				and te.user_id = #{obj.user.id}
			</if>
			<if test="obj.user != null and obj.user.name != null and obj.user.name != ''">
				and tu.name = #{obj.user.name}
			</if>
			<if test="obj.user != null and obj.user.mobile !=null and obj.user.mobile != ''">
				and tu.mobile = #{obj.user.mobile}
			</if>
			<if test="obj.company != null and obj.company.name != null and obj.company.name != ''">
				and tc.name like concat('%',#{obj.company.name},'%')
			</if>
			<if test="obj.enrollTimeStart != null and obj.enrollTimeStart != ''">
				and te.create_time >= #{obj.enrollTimeStart}
			</if>
			<if test="obj.enrollTimeEnd != null and obj.enrollTimeEnd != ''">
				and #{obj.enrollTimeEnd} >= te.create_time
			</if>
		</trim>
		order by te.create_time desc
		<include refid="ORACLE.paginationEnd" />
	</select>
	
	<!-- 用于初始化数据时使用 -->
	<update id="batchUpdateToDelete">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update t_enrollment
			<set>
				data_state=#{item.dataState},
				update_time = #{item.updateTime}
			</set>
			where id = #{item.id}
         </foreach>
	</update>
	
	<update id="deleteByIdInLogic">
		update t_enrollment set data_state = 0 where id = #{id,jdbcType=DECIMAL}
	</update>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="obj.id" parameterType="com.webapps.common.entity.Enrollment">
		insert into t_enrollment
		(
			<include refid="insert_columns" />
		)
		values
		(
			#{obj.user.id},
			#{obj.recruitment.id},
			#{obj.company.id},
			#{obj.state},
			#{obj.dataState},
			#{obj.createTime},
			#{obj.isTalked},
			#{obj.talkResult},
			#{obj.failedReason},
			#{obj.entryDate},
			#{obj.reward},
			#{obj.cashbackDays},
			#{obj.isHistory}
		)
	</insert>
	
	<update id="updateById">
		update t_enrollment 
		set 
			user_id=#{obj.user.id},
			recruitment_id=#{obj.recruitment.id},
			company_id=#{obj.company.id},
			state=#{obj.state}, 
			data_state=#{obj.dataState},
			update_TIME=#{obj.updateTime},
			is_talked=#{obj.isTalked},
			talk_result=#{obj.talkResult},
			remark = #{obj.remark},
			failed_reason = #{obj.failedReason},
			entry_date = #{obj.entryDate},
			reward = #{obj.reward},
			cashback_days = #{obj.cashbackDays}
		where id=#{id}
	</update>
	
	<update id="saveTalkInfoById">
		update t_enrollment 
		set 
			update_TIME=#{obj.updateTime},
			is_talked=#{obj.isTalked},
			talk_result=#{obj.talkResult}
		where id=#{id}
	</update>
	
	<update id="cancelEnroll">
		update t_enrollment 
		set 
			update_TIME=#{obj.updateTime},
			remark=#{obj.remark},
			data_state=#{obj.talkResult}
		where id=#{id}
	</update>
	
	<update id="batchUpdate">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update t_enrollment
			<set>
				state=#{item.state},
				update_time = #{item.updateTime}
			</set>
			where id = #{item.id}
         </foreach>
	</update>

	<update id="batchUpdateToHistory">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update t_enrollment
			<set>
				is_history=#{item.isHistory},
				update_time = #{item.updateTime}
			</set>
			where id = #{item.id}
		</foreach>
	</update>
</mapper>